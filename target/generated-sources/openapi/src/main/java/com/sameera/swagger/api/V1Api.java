/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.sameera.swagger.api;

import com.sameera.swagger.model.Customer;
import com.sameera.swagger.model.ErrorResponse;
import java.util.UUID;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-09-03T13:08:40.846767+08:00[Asia/Singapore]")
@Validated
@Api(value = "v1", description = "the v1 API")
public interface V1Api {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /v1/customers : Add a new customer
     * Add a new customer
     *
     * @param customer Create a new customer (required)
     * @return Successful operation (status code 201)
     *         or Invalid input (status code 400)
     *         or Internal server error (status code 500)
     */
    @ApiOperation(value = "Add a new customer", nickname = "addCustomer", notes = "Add a new customer", response = Customer.class, tags={ "customer", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Successful operation", response = Customer.class),
        @ApiResponse(code = 400, message = "Invalid input", response = ErrorResponse.class),
        @ApiResponse(code = 500, message = "Internal server error", response = ErrorResponse.class) })
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/v1/customers",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<Customer> addCustomer(@ApiParam(value = "Create a new customer", required = true) @Valid @RequestBody Customer customer) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"firstName\" : \"Sameera\", \"lastName\" : \"Bandara\", \"address\" : { \"zip\" : \"94301\", \"city\" : \"Palo Alto\", \"street\" : \"437 Lytton\", \"state\" : \"CA\" }, \"id\" : \"3080fca2-897c-4a82-a781-27bd106f79a9\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /v1/customers/{customerId} : Finds customer by id
     * Finds customer by id
     *
     * @param customerId customer id (required)
     * @return successful operation (status code 200)
     *         or Invalid status value (status code 400)
     */
    @ApiOperation(value = "Finds customer by id", nickname = "findCustomer", notes = "Finds customer by id", response = Customer.class, tags={ "customer", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Customer.class),
        @ApiResponse(code = 400, message = "Invalid status value", response = ErrorResponse.class) })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/v1/customers/{customerId}",
        produces = { "application/json" }
    )
    default ResponseEntity<Customer> findCustomer(@ApiParam(value = "customer id", required = true) @PathVariable("customerId") UUID customerId) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"firstName\" : \"Sameera\", \"lastName\" : \"Bandara\", \"address\" : { \"zip\" : \"94301\", \"city\" : \"Palo Alto\", \"street\" : \"437 Lytton\", \"state\" : \"CA\" }, \"id\" : \"3080fca2-897c-4a82-a781-27bd106f79a9\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /v1/customers : Update an existing customer
     * Update an existing customer by id
     *
     * @param customer Update an existing customer by id (required)
     * @return Successful operation (status code 200)
     *         or Invalid ID supplied (status code 400)
     *         or Customer not found (status code 404)
     *         or Validation exception (status code 405)
     */
    @ApiOperation(value = "Update an existing customer", nickname = "updateCustomer", notes = "Update an existing customer by id", response = Customer.class, tags={ "customer", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation", response = Customer.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied", response = ErrorResponse.class),
        @ApiResponse(code = 404, message = "Customer not found", response = ErrorResponse.class),
        @ApiResponse(code = 405, message = "Validation exception", response = ErrorResponse.class) })
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/v1/customers",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<Customer> updateCustomer(@ApiParam(value = "Update an existing customer by id", required = true) @Valid @RequestBody Customer customer) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"firstName\" : \"Sameera\", \"lastName\" : \"Bandara\", \"address\" : { \"zip\" : \"94301\", \"city\" : \"Palo Alto\", \"street\" : \"437 Lytton\", \"state\" : \"CA\" }, \"id\" : \"3080fca2-897c-4a82-a781-27bd106f79a9\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
